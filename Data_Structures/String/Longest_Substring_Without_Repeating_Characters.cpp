#include <iostream>
#include <string>
using namespace std;
class Solution
{
  public:
    int lengthOfLongestSubstring(string s) {
        int n = s.length();
        int maxLength = 0;
        int start = 0; // left pointer
        int charIndex[256] = {0};

        for (int i = 0; i < n; i++) {
            if (charIndex[s[i]] > start) {
                start = charIndex[s[i]]; // N·∫øu g·∫∑p ph·∫•n t·ª≠ tr√πng, d·ªãch left pointer sang ph·∫£i
            }
            charIndex[s[i]] = i + 1; // C·∫≠p nh·∫≠t right pointer
            maxLength = max(maxLength, i - start + 1);
        }
        return maxLength;
    }
};
int main()
{
    Solution solution;
    string s = "abcabcbb";
    int result = solution.lengthOfLongestSubstring(s);
    cout << "Length of longest substring without repeating characters: " << result << endl;
    return 0;
}
// Explanation:
// Ph√¢n t√≠ch chi ti·∫øt v·ªõi chu·ªói "abcabcbb":
// Step	left	right	s[right]	 seen	       maxLength	Ghi ch√∫
// 1	      0	      0	      'a'	     {a}	           1	    Ch∆∞a tr√πng
// 2	      0	      1	      'b'	     {a, b}	           2	    Ch∆∞a tr√πng
// 3	      0	      2	      'c'	     {a, b, c}	       3	    Ch∆∞a tr√πng
// 4	      0‚Üí1	  3	      'a'	     {b, c, a}	       3	    'a' l·∫∑p ‚Üí x√≥a 'a' c≈©
// 5	      1‚Üí2	  4	      'b'	     {c, a, b}	       3	    'b' l·∫∑p ‚Üí x√≥a 'b' c≈©
// 6	      2‚Üí3	  5	      'c'	     {a, b, c}	       3	    'c' l·∫∑p ‚Üí x√≥a 'c' c≈©
// 7	      3‚Üí4	  6	      'b'	     {a, c, b}	       3	    'b' l·∫∑p ‚Üí x√≥a 'b' c≈©
// 8	      4‚Üí5	  7	      'b'	     {a, c, b}	       3	    'b' l·∫∑p l·∫°i n·ªØa ‚Üí x√≥a ti·∫øp

// üí° √ù t∆∞·ªüng thu·∫≠t to√°n (Sliding Window):
// 1.Duy·ªát chu·ªói t·ª´ tr√°i sang ph·∫£i.

// 2.S·ª≠ d·ª•ng m·ªôt c·ª≠a s·ªï tr∆∞·ª£t (window) v·ªõi hai con tr·ªè left v√† right ƒë·ªÉ gi·ªØ chu·ªói con hi·ªán t·∫°i kh√¥ng c√≥ k√Ω t·ª± l·∫∑p.

// 3.D√πng m·ªôt set ho·∫∑c dict ƒë·ªÉ theo d√µi c√°c k√Ω t·ª± ƒë√£ g·∫∑p trong c·ª≠a s·ªï ƒë√≥.

// 4.M·ªói l·∫ßn g·∫∑p k√Ω t·ª± l·∫∑p, ta d·ªãch left sang ph·∫£i cho ƒë·∫øn khi kh√¥ng c√≤n tr√πng l·∫∑p, x√≥a ph·∫ßn t·ª≠ c≈©.

// 5.C·∫≠p nh·∫≠t ƒë·ªô d√†i l·ªõn nh·∫•t (max_length).


// ‚úÖ V√≠ d·ª•: s = "abcabcbb"
// i	s[i]	start	charIndex	maxLength	Gi·∫£i th√≠ch
// 0	 a	      0	      a = 1	       1	      a m·ªõi
// 1	 b	      0	      b = 2	       2	      ab
// 2	 c	      0	      c = 3	       3	      abc
// 3	 a	      0 ‚Üí 1	  a = 4	       3	      g·∫∑p a (ƒë√£ ·ªü index 0), n√™n start = 1
// 4	 b	      1 ‚Üí 2	  b = 5	       3	      g·∫∑p b (·ªü index 1), n√™n start = 2
// 5	 c	      2 ‚Üí 3	  c = 6	       3	      g·∫∑p c
// 6	 b	      3	      b = 7	       3	      ok
// 7	 b	      3 ‚Üí 7	  b = 8	       3	      g·∫∑p b ·ªü 6, update start


